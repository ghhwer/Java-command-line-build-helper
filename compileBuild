#!/bin/bash
#EDIT THIS
PRJN="myPrj"
MAINCLASS="Main"

#DON'T TOUCH
MYPATH=$pwd
_script="$(readlink -f ${BASH_SOURCE[0]})"
ROOT="$(dirname $_script)"
SRC="$ROOT/src"
LIBS="$ROOT/libs"
BUILD="$ROOT/build"
BIN="$ROOT/bin"

ARG1=$1
ARG2=$2

if [ ! -d "$SRC" ] || [ ! "$(ls -A $SRC)" ]; then
	echo "you must at least have a /src folder with files on it!"
	exit
else
	if [ ! -d "$BUILD" ]; then
		mkdir $BUILD
	fi 

	if [ ! -d "$LIBS" ]; then
		mkdir $LIBS
	fi 

	if [ ! -d "$BIN" ]; then
		mkdir $LIBS
	fi 

	function line {
	echo "---------------------------------------------------------------"
	}
	function void {
	echo ""
	}

	void
	echo "Building from:"
	echo $ROOT
	line

	#Compiles Code
	void
	echo "Compiling $PRJN..."
	cd $SRC
	find -name "*.java" > sources.txt
	javac -cp ".:$LIBS/*" -d $BUILD @sources.txt
	line
	echo "End of compilation."
	line
	rm sources.txt

	#Moves to libs folder and moves jars to bin
	cd $LIBS

	#copy libs
	if [ ! -d "$BIN/libs" ]; then
		mkdir $BIN/libs
	fi

	cp $LIBS/* $BIN/libs
	#stores a list of all jars to place in manifest
	JARS=""
	for i in *.jar; do
		JARS="$JARS libs/$i"
	done

	#moves to build and builds jar
	cd $BUILD

	#Sets up manifest
	echo -e "Class-Path: $JARS\nMain-Class: $MAINCLASS\n">"$BUILD/Manifest.txt"

	#builds jar and marks it as an executable
	void 
	echo "Building .jar file.."
	find -name "*.class" > sources.txt
	jar cfm $BIN/$PRJN.jar Manifest.txt @sources.txt
	rm sources.txt
	chmod 777 $BIN/$PRJN.jar 

	#runs jar file if asked to
	line
	if [ $ARG1 == "-r" ] || [ $ARG2 == "-r" ];
		then 
			echo "Jar ready! running... "
			line
			java -jar $BIN/$PRJN.jar
		else
			echo "Jar ready!"	
			line
	fi
	#moves back to initial folder
	cd $MYPATH

	#Clears off build files if asked
	if [ $ARG1 == "-c" ] || [ $ARG2 == "-c" ];
		then
		 	bash $ROOT/clearProj
	fi
fi
